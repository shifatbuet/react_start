{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_start\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person';\nimport Validation from './Validation/Validation';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        name: \"Rimon\",\n        age: 26,\n        id: 1\n      }, {\n        name: \"Shifat\",\n        age: 21,\n        id: 3\n      }, {\n        name: \"Baby\",\n        age: 2,\n        id: 2\n      }],\n      name: \"xx\",\n      show: false,\n      length: 0\n    };\n\n    this.nameChangedHandler = (event, id) => {\n      const personIndex = this.state.persons.findIndex(p => {\n        return p.id === id;\n      });\n      const personObject = { ...this.state.persons[personIndex]\n      };\n      personObject.name = event.target.value;\n      const persons = this.state.persons;\n      persons[personIndex] = personObject;\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.togglePerson = () => {\n      console.log(this.state.show);\n      this.setState({\n        show: !this.state.show\n      });\n    };\n\n    this.deletePerson = index => {\n      console.log(index);\n      const persons = this.state.persons.slice(); //copy a new array , as array is referenced type \n\n      persons.splice(index, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.getLength = event => {\n      this.setState({\n        length: event.target.value.length\n      });\n    };\n  }\n\n  render() {\n    let persons = null;\n\n    if (this.state.show) {\n      persons = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"personBlock\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, this.state.persons.map((person, index) => {\n        return /*#__PURE__*/React.createElement(Person, {\n          change: event => this.nameChangedHandler(event, person.id),\n          key: person.id,\n          name: person.name,\n          age: person.age,\n          click: () => this.deletePerson(index),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 26\n          }\n        });\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 8\n      }\n    }, \" This is really working \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.getLength,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, \"Length is : \", this.state.length), /*#__PURE__*/React.createElement(Validation, {\n      len: this.state.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Char, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.togglePerson,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, \" Switch name \"), persons);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/react_start/src/App.js"],"names":["React","Component","Person","Validation","App","state","persons","name","age","id","show","length","nameChangedHandler","event","personIndex","findIndex","p","personObject","target","value","setState","togglePerson","console","log","deletePerson","index","slice","splice","getLength","render","map","person"],"mappings":"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","sourcesContent":["import React,{ Component} from 'react';\r\nimport './App.css';\r\nimport Person from './Person/Person';\r\nimport Validation from './Validation/Validation';\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    persons:[\r\n      {name:\"Rimon\",age:26,id:1},\r\n      {name:\"Shifat\",age:21,id:3},\r\n      {name:\"Baby\",age:2,id:2}\r\n    ],\r\n    name:\"xx\",\r\n    show: false,\r\n    length: 0\r\n  };\r\n\r\n\r\n\r\n  nameChangedHandler = (event,id)=>{\r\n    const personIndex = this.state.persons.findIndex(\r\n      p=>{\r\n        return p.id===id;\r\n      }\r\n    );\r\n    const personObject = {...this.state.persons[personIndex]};\r\n    personObject.name = event.target.value;\r\n    const persons = this.state.persons;\r\n    persons[personIndex] = personObject;\r\n     this.setState({\r\n        persons: persons\r\n     })\r\n  }\r\n\r\n  togglePerson = ()=>{\r\n    console.log(this.state.show);\r\n    this.setState({\r\n      show:!this.state.show\r\n    });\r\n  }\r\n\r\n  deletePerson =(index)=>{\r\n    console.log(index);\r\n    const persons = this.state.persons.slice(); //copy a new array , as array is referenced type \r\n    persons.splice(index,1);\r\n    this.setState({persons:persons});\r\n  }\r\n  \r\n\r\n  getLength=(event)=>{\r\n      this.setState({\r\n        length:event.target.value.length\r\n      });\r\n  }\r\n\r\n  \r\n\r\n  render(){\r\n\r\n    let persons = null;\r\n    if(this.state.show){     \r\n      persons=(\r\n        <div className=\"personBlock\">\r\n           {this.state.persons.map((person,index)=>{\r\n                 return  <Person change={(event)=>this.nameChangedHandler(event,person.id)}  key={person.id} name={person.name} age={person.age} click={()=>this.deletePerson(index)}/>\r\n            })}\r\n      </div> ); \r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n       <h1> This is really working </h1>\r\n       <input type=\"text\" onChange={this.getLength}/>\r\n        <p>Length is : {this.state.length}</p>\r\n      < Validation len={this.state.length}/>\r\n      <Char />\r\n\r\n        <button onClick={this.togglePerson}> Switch name </button>\r\n        \r\n        {persons}\r\n        \r\n      </div>\r\n    )\r\n  };\r\n  \r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}