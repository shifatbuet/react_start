{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_start\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person';\nimport Validation from './Validation/Validation';\nimport Char from './Char/Char';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        name: \"Rimon\",\n        age: 26,\n        id: 1\n      }, {\n        name: \"Shifat\",\n        age: 21,\n        id: 3\n      }, {\n        name: \"Baby\",\n        age: 2,\n        id: 2\n      }],\n      name: \"xx\",\n      show: false,\n      length: 0,\n      chars: []\n    };\n\n    this.nameChangedHandler = (event, id) => {\n      const personIndex = this.state.persons.findIndex(p => {\n        return p.id === id;\n      });\n      const personObject = { ...this.state.persons[personIndex]\n      };\n      personObject.name = event.target.value;\n      const persons = this.state.persons;\n      persons[personIndex] = personObject;\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.togglePerson = () => {\n      console.log(this.state.show);\n      this.setState({\n        show: !this.state.show\n      });\n    };\n\n    this.deletePerson = index => {\n      console.log(index);\n      const persons = this.state.persons.slice(); //copy a new array , as array is referenced type \n\n      persons.splice(index, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.charsComponent = null;\n\n    this.getLength = event => {\n      const chars = event.target.value.split('');\n      this.setState({\n        length: event.target.value.length,\n        chars: chars\n      });\n    };\n\n    this.deleteChar = (event, index) => {\n      const charsArray = this.state.chars.slice();\n      charsArray.splice(index, 1);\n      this.setState({\n        chars: charsArray\n      });\n    };\n  }\n\n  render() {\n    let persons = null;\n    let charsComponents = null;\n\n    if (this.state.show) {\n      persons = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"personBlock\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, this.state.persons.map((person, index) => {\n        return /*#__PURE__*/React.createElement(Person, {\n          change: event => this.nameChangedHandler(event, person.id),\n          key: person.id,\n          name: person.name,\n          age: person.age,\n          click: () => this.deletePerson(index),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 26\n          }\n        });\n      }));\n    }\n\n    console.log(this.state.chars.length);\n\n    if (this.state.chars.length > 0) {\n      charsComponents = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      }, this.state.chars.map((char, index) => {\n        return /*#__PURE__*/React.createElement(Char, {\n          click: event => this.deleteChar(event, index),\n          char: char,\n          key: index + '' + char,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 26\n          }\n        });\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 8\n      }\n    }, \" This is really working \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.getLength,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, \"Length is : \", this.state.length), /*#__PURE__*/React.createElement(Validation, {\n      len: this.state.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Char, {\n      char: \"A\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.togglePerson,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, \" Switch name \"), persons, charsComponents);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/react_start/src/App.js"],"names":["React","Component","Person","Validation","Char","App","state","persons","name","age","id","show","length","chars","nameChangedHandler","event","personIndex","findIndex","p","personObject","target","value","setState","togglePerson","console","log","deletePerson","index","slice","splice","charsComponent","getLength","split","deleteChar","charsArray","render","charsComponents","map","person","char"],"mappings":"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","sourcesContent":["import React,{ Component} from 'react';\r\nimport './App.css';\r\nimport Person from './Person/Person';\r\nimport Validation from './Validation/Validation';\r\nimport Char from './Char/Char';\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    persons:[\r\n      {name:\"Rimon\",age:26,id:1},\r\n      {name:\"Shifat\",age:21,id:3},\r\n      {name:\"Baby\",age:2,id:2}\r\n    ],\r\n    name:\"xx\",\r\n    show: false,\r\n    length: 0,\r\n    chars:[]\r\n\r\n  };\r\n\r\n\r\n\r\n  nameChangedHandler = (event,id)=>{\r\n    const personIndex = this.state.persons.findIndex(\r\n      p=>{\r\n        return p.id===id;\r\n      }\r\n    );\r\n    const personObject = {...this.state.persons[personIndex]};\r\n    personObject.name = event.target.value;\r\n    const persons = this.state.persons;\r\n    persons[personIndex] = personObject;\r\n     this.setState({\r\n        persons: persons\r\n     })\r\n  }\r\n\r\n  togglePerson = ()=>{\r\n    console.log(this.state.show);\r\n    this.setState({\r\n      show:!this.state.show\r\n    });\r\n  }\r\n\r\n  deletePerson =(index)=>{\r\n    console.log(index);\r\n    const persons = this.state.persons.slice(); //copy a new array , as array is referenced type \r\n    persons.splice(index,1);\r\n    this.setState({persons:persons});\r\n  }\r\n  \r\n  charsComponent=null;\r\n  getLength=(event)=>{\r\n      const chars=event.target.value.split('');\r\n      this.setState({\r\n        length:event.target.value.length,\r\n        chars:chars\r\n        \r\n      });\r\n  }\r\n\r\n  \r\n  deleteChar=(event,index)=>{\r\n    const charsArray = this.state.chars.slice();\r\n   \r\n    charsArray.splice(index,1);\r\n    this.setState({\r\n      chars:charsArray\r\n      \r\n    });\r\n\r\n\r\n  }\r\n  render(){\r\n\r\n    let persons = null;\r\n    let charsComponents = null;\r\n    if(this.state.show){     \r\n      persons=(\r\n        <div className=\"personBlock\">\r\n           {this.state.persons.map((person,index)=>{\r\n                 return  <Person change={(event)=>this.nameChangedHandler(event,person.id)}  key={person.id} name={person.name} age={person.age} click={()=>this.deletePerson(index)}/>\r\n            })}\r\n      </div> ); \r\n    }\r\n    console.log(this.state.chars.length);\r\n    if(this.state.chars.length > 0){\r\n      charsComponents =  (\r\n        <div>\r\n            {\r\n              this.state.chars.map(\r\n                (char,index)=>{\r\n                  return <Char click={(event)=>this.deleteChar(event,index)} char={char} key={index+''+char}/>\r\n                }\r\n              )\r\n            }\r\n         </div> \r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n       <h1> This is really working </h1>\r\n       <input type=\"text\" onChange={this.getLength}/>\r\n        <p>Length is : {this.state.length}</p>\r\n      < Validation len={this.state.length}/>\r\n      <Char char=\"A\"/>\r\n\r\n        <button onClick={this.togglePerson}> Switch name </button>\r\n        \r\n        {persons}\r\n        {charsComponents}\r\n        \r\n      </div>\r\n    )\r\n  };\r\n  \r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}