{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_start\\\\src\\\\App.js\";\nimport React, { useState, Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person';\nimport UserInput from './UserInput/UserInput';\nimport UserOutput from './UserOutput/UserOutput';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        name: \"Rimon\",\n        age: 26,\n        id: 1\n      }, {\n        name: \"Shifat\",\n        age: 21,\n        id: 3\n      }, {\n        name: \"Baby\",\n        age: 2,\n        id: 2\n      }],\n      name: \"xx\",\n      show: false\n    };\n\n    this.switchName = newName => {\n      console.log(newName);\n      this.setState({\n        persons: [{\n          name: newName,\n          age: 26\n        }, {\n          name: newName,\n          age: 21\n        }, {\n          name: \"Baby\",\n          age: 2\n        }]\n      });\n    };\n\n    this.newstate = {\n      name: \"OKK\"\n    };\n\n    this.nameChangedHandler = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.togglePerson = () => {\n      console.log(this.state.show);\n      this.setState({\n        show: !this.state.show\n      });\n    };\n\n    this.deletePerson = index => {\n      const persons = this.state.persons.slice(); //copy a new array , as array is referenced type \n\n      persons.splice(index, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n  }\n\n  render() {\n    let persons = null;\n\n    if (this.state.show) {\n      persons = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"personBlock\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }, this.state.persons.map((person, index) => {\n        return /*#__PURE__*/React.createElement(Person, {\n          key: person.id,\n          name: person.name,\n          age: person.age,\n          click: () => this.deletePerson(index),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 26\n          }\n        });\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(UserInput, {\n      change: this.nameChangedHandler,\n      userName: this.state.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(UserOutput, {\n      userName: this.state.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(UserOutput, {\n      userName: \"Min\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, \" This is really working \"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.togglePerson,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, \" Switch name \"), persons);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/react_start/src/App.js"],"names":["React","useState","Component","Person","UserInput","UserOutput","App","state","persons","name","age","id","show","switchName","newName","console","log","setState","newstate","nameChangedHandler","event","target","value","togglePerson","deletePerson","index","slice","splice","render","map","person"],"mappings":"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","sourcesContent":["import React,{useState, Component} from 'react';\r\nimport './App.css';\r\nimport Person from './Person/Person';\r\nimport UserInput from './UserInput/UserInput';\r\nimport UserOutput from './UserOutput/UserOutput';\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    persons:[\r\n      {name:\"Rimon\",age:26,id:1},\r\n      {name:\"Shifat\",age:21,id:3},\r\n      {name:\"Baby\",age:2,id:2}\r\n    ],\r\n    name:\"xx\",\r\n    show: false\r\n  };\r\n\r\n   switchName = (newName)=>{\r\n     console.log(newName);\r\n    this.setState(\r\n      {\r\n        persons:[\r\n          {name:newName,age:26},\r\n          {name:newName,age:21},\r\n          {name:\"Baby\",age:2}\r\n        ]\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  newstate={\r\n    name:\"OKK\"\r\n  };\r\n\r\n  nameChangedHandler = (event)=>{\r\n     this.setState({\r\n        name:event.target.value\r\n     })\r\n  }\r\n\r\n  togglePerson = ()=>{\r\n    console.log(this.state.show);\r\n    this.setState({\r\n      show:!this.state.show\r\n    });\r\n  }\r\n\r\n  deletePerson =(index)=>{\r\n    const persons = this.state.persons.slice(); //copy a new array , as array is referenced type \r\n    persons.splice(index,1);\r\n    this.setState({persons:persons});\r\n  }\r\n\r\n  render(){\r\n\r\n    let persons = null;\r\n    if(this.state.show){     \r\n      persons=(\r\n        <div className=\"personBlock\">\r\n           {this.state.persons.map((person,index)=>{\r\n                 return  <Person key={person.id} name={person.name} age={person.age} click={()=>this.deletePerson(index)}/>\r\n            })}\r\n      </div> ); \r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n       \r\n         <UserInput change={this.nameChangedHandler} userName={this.state.name}/> \r\n         <UserOutput userName={this.state.name}/> \r\n         <UserOutput userName=\"Min\"/> \r\n        <h1> This is really working </h1>\r\n        <button onClick={this.togglePerson}> Switch name </button>\r\n        \r\n        {persons}\r\n        \r\n      </div>\r\n    )\r\n  };\r\n  \r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}